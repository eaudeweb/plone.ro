[buildout]
extends =
    base.cfg
    sources.cfg

parts +=
    instance
    checkinterval-script
    checkinterval
    zeoserver
    www1
    www2
    www3
    www4
    www5
    www6
    www7
    www8
    zope-start
    zope-stop
    zope-restart
    varnish-build
    varnish
    copy-varnish-vcl
    chown

eggs +=
    collective.ploneslimbar
    collective.quickupload
    eea.facetednavigation
    eea.tags
    eea.geotags
    plonetheme.bootstrap
    plonetheme.coolblue
    quintagroup.theme.sunrain
    quintagroup.theme.pythonreel
    theme.plone.ro
    Products.Carousel
    plone.app.ldap

zcml +=
    collective.ploneslimbar
    collective.quickupload
    eea.facetednavigation
    eea.tags
    eea.geotags
    plonetheme.bootstrap
    plonetheme.coolblue
    quintagroup.theme.sunrain
    quintagroup.theme.pythonreel
    theme.plone.ro
    Products.Carousel
    plone.app.ldap


auto-checkout +=
    plonetheme.bootstrap
    theme.plone.ro
    collective.ploneslimbar

# Server conf
effective-user = scoreboard
varnish-address = 127.0.0.1
varnish-port = 18080
varnish-backends = 127.0.0.1:18081
zeo-address = 18089
file-storage = ${buildout:directory}/var/filestorage/Data.fs
blob-storage = ${buildout:directory}/var/blobstorage
blob-storage-cache = ${buildout:directory}/var/blobstorage


[checkinterval-script]
recipe = zc.recipe.egg
eggs = jarn.checkinterval

[checkinterval]
recipe = cs.recipe.checkinterval

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
effective-user = ${buildout:effective-user}
http-address = ${buildout:varnish-port}
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-address}
effective-user = ${buildout:effective-user}
file-storage = ${buildout:file-storage}
blob-storage = ${buildout:blob-storage}

[www1]
recipe = plone.recipe.zope2instance
http-address = 18081
effective-user = ${buildout:effective-user}
user = admin:admin
zeo-client = True
zeo-address = ${buildout:zeo-address}
zodb-cache-size = 55000
zeo-client-cache-size = 350MB
verbose-security = off
zserver-threads = 2
shared-blob = on
blob-storage = ${buildout:blob-storage-cache}
http-force-connection-close = on
debug-mode = off
http-header-max-length = 12288
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
enable-product-installation = off
python-check-interval = ${checkinterval:value}

[www2]
<= www1
http-address = 18082

[www3]
<= www1
http-address = 18083

[www4]
<= www1
http-address = 18084

[www5]
<= www1
http-address = 18085

[www6]
<= www1
http-address = 18086

[www7]
<= www1
http-address = 18087

[www8]
<= www1
http-address = 18088

[varnish-build]
recipe = zc.recipe.cmmi
url = http://repo.varnish-cache.org/source/varnish-4.0.3.tar.gz

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
bind = ${buildout:varnish-address}:${buildout:varnish-port}
backends = ${buildout:varnish-backends}
user = ${buildout:effective-user}
balancer = random
cache-size = 1G

[copy-varnish-vcl]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = cp etc/varnish/varnish.vcl parts/varnish/varnish.vcl

[zope-start]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  echo "Starting zeoserver..."
  bin/zeoserver start
  echo "Starting www1..."
  bin/www1 start
  echo "Starting www2..."
  bin/www2 start
  echo "Starting www3..."
  bin/www3 start
  echo "Starting www4..."
  bin/www4 start
  echo "Starting www5..."
  bin/www5 start
  echo "Starting www6..."
  bin/www6 start
  echo "Starting www7..."
  bin/www7 start
  echo "... DONE"
output = ${buildout:directory}/bin/zope-start
mode = 755


[zope-stop]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  echo "Stopping www1..."
  bin/www1 stop
  echo "Stopping www2..."
  bin/www2 stop
  echo "Stopping www3..."
  bin/www3 stop
  echo "Stopping www4..."
  bin/www4 stop
  echo "Stopping www5..."
  bin/www5 stop
  echo "Stopping www6..."
  bin/www6 stop
  echo "Stopping www7..."
  bin/www7 stop
  echo "Stopping zeoserver..."
  bin/zeoserver stop
  echo "... DONE"
output = ${buildout:directory}/bin/zope-stop
mode = 755

[zope-restart]
recipe = collective.recipe.template
input = inline:
  #!/bin/sh
  echo "Restarting www1..."
  bin/www1 stop && bin/www1 start
  echo "Restarting www2..."
  bin/www2 stop && bin/www2 start
  echo "Restarting www3..."
  bin/www3 stop && bin/www3 start
  echo "Restarting www4..."
  bin/www4 stop && bin/www4 start
  echo "Restarting www5..."
  bin/www5 stop && bin/www5 start
  echo "Restarting www6..."
  bin/www6 stop && bin/www6 start
  echo "Restarting www7..."
  bin/www7 stop && bin/www7 start
output = ${buildout:directory}/bin/zope-restart
mode = 755

[chown]
# This recipe is used to set permissions -- and ownership for root mode installs
recipe = plone.recipe.command
command =
    chown -R ${buildout:effective-user} ${buildout:directory};
    chmod -R 755 ${buildout:directory}/bin/
update-command = ${chown:command}
